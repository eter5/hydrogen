"use strict";(self.webpackChunkdocs_v_1=self.webpackChunkdocs_v_1||[]).push([[4774],{3905:(t,e,n)=>{n.d(e,{Zo:()=>c,kt:()=>y});var r=n(7294);function a(t,e,n){return e in t?Object.defineProperty(t,e,{value:n,enumerable:!0,configurable:!0,writable:!0}):t[e]=n,t}function o(t,e){var n=Object.keys(t);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(t);e&&(r=r.filter((function(e){return Object.getOwnPropertyDescriptor(t,e).enumerable}))),n.push.apply(n,r)}return n}function i(t){for(var e=1;e<arguments.length;e++){var n=null!=arguments[e]?arguments[e]:{};e%2?o(Object(n),!0).forEach((function(e){a(t,e,n[e])})):Object.getOwnPropertyDescriptors?Object.defineProperties(t,Object.getOwnPropertyDescriptors(n)):o(Object(n)).forEach((function(e){Object.defineProperty(t,e,Object.getOwnPropertyDescriptor(n,e))}))}return t}function l(t,e){if(null==t)return{};var n,r,a=function(t,e){if(null==t)return{};var n,r,a={},o=Object.keys(t);for(r=0;r<o.length;r++)n=o[r],e.indexOf(n)>=0||(a[n]=t[n]);return a}(t,e);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(t);for(r=0;r<o.length;r++)n=o[r],e.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(t,n)&&(a[n]=t[n])}return a}var u=r.createContext({}),s=function(t){var e=r.useContext(u),n=e;return t&&(n="function"==typeof t?t(e):i(i({},e),t)),n},c=function(t){var e=s(t.components);return r.createElement(u.Provider,{value:e},t.children)},d="mdxType",p={inlineCode:"code",wrapper:function(t){var e=t.children;return r.createElement(r.Fragment,{},e)}},m=r.forwardRef((function(t,e){var n=t.components,a=t.mdxType,o=t.originalType,u=t.parentName,c=l(t,["components","mdxType","originalType","parentName"]),d=s(n),m=a,y=d["".concat(u,".").concat(m)]||d[m]||p[m]||o;return n?r.createElement(y,i(i({ref:e},c),{},{components:n})):r.createElement(y,i({ref:e},c))}));function y(t,e){var n=arguments,a=e&&e.mdxType;if("string"==typeof t||a){var o=n.length,i=new Array(o);i[0]=m;var l={};for(var u in e)hasOwnProperty.call(e,u)&&(l[u]=e[u]);l.originalType=t,l[d]="string"==typeof t?t:a,i[1]=l;for(var s=2;s<o;s++)i[s]=n[s];return r.createElement.apply(null,i)}return r.createElement.apply(null,n)}m.displayName="MDXCreateElement"},839:(t,e,n)=>{n.r(e),n.d(e,{assets:()=>u,contentTitle:()=>i,default:()=>p,frontMatter:()=>o,metadata:()=>l,toc:()=>s});var r=n(7462),a=(n(7294),n(3905));const o={},i="CartLineQuantityAdjustButton",l={unversionedId:"components/cart/cartlinequantityadjustbutton",id:"components/cart/cartlinequantityadjustbutton",title:"CartLineQuantityAdjustButton",description:"The CartLineQuantityAdjustButton component renders a button that adjusts the cart line's quantity when pressed.",source:"@site/docs/components/cart/cartlinequantityadjustbutton.md",sourceDirName:"components/cart",slug:"/components/cart/cartlinequantityadjustbutton",permalink:"/hydrogen-v1/components/cart/cartlinequantityadjustbutton",draft:!1,tags:[],version:"current",frontMatter:{},sidebar:"hydrogen",previous:{title:"CartLineQuantity",permalink:"/hydrogen-v1/components/cart/cartlinequantity"},next:{title:"CartLines",permalink:"/hydrogen-v1/components/cart/cartlines"}},u={},s=[{value:"Example code",id:"example-code",level:2},{value:"Props",id:"props",level:2},{value:"Component type",id:"component-type",level:2},{value:"Related components",id:"related-components",level:2}],c={toc:s},d="wrapper";function p(t){let{components:e,...n}=t;return(0,a.kt)(d,(0,r.Z)({},c,n,{components:e,mdxType:"MDXLayout"}),(0,a.kt)("h1",{id:"cartlinequantityadjustbutton"},"CartLineQuantityAdjustButton"),(0,a.kt)("p",null,"The ",(0,a.kt)("inlineCode",{parentName:"p"},"CartLineQuantityAdjustButton")," component renders a button that adjusts the cart line's quantity when pressed.\nIt must be a descendent of a ",(0,a.kt)("inlineCode",{parentName:"p"},"CartLineProvider")," component."),(0,a.kt)("h2",{id:"example-code"},"Example code"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-tsx"},'import {\n  CartLineProvider,\n  useCart,\n  CartLineQuantityAdjustButton,\n} from \'@shopify/hydrogen\';\n\nexport function App() {\n  const {lines} = useCart();\n\n  return lines.map((line) => {\n    return (\n      <CartLineProvider key={line.id} line={line}>\n        <CartLineQuantityAdjustButton adjust="increase">\n          Increase quantity\n        </CartLineQuantityAdjustButton>\n        <CartLineQuantityAdjustButton adjust="decrease">\n          Decrease quantity\n        </CartLineQuantityAdjustButton>\n        <CartLineQuantityAdjustButton adjust="remove">\n          Remove from cart\n        </CartLineQuantityAdjustButton>\n      </CartLineProvider>\n    );\n  });\n}\n')),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-tsx"},"// Override `onClick` default behaviour\nimport {\n  CartLineProvider,\n  useCart,\n  CartLineQuantityAdjustButton,\n} from '@shopify/hydrogen';\n\nexport function App() {\n  const {lines} = useCart();\n\n  const handleCustomOnClick = (event) => {\n    event.preventDefault(); // prevents button from triggering default behaviour\n    // custom click handler code\n  };\n\n  return lines.map((line) => {\n    return (\n      <CartLineProvider key={line.id} line={line}>\n        <CartLineQuantityAdjustButton\n          adjust=\"increase\"\n          onClick={handleCustomOnClick}\n        >\n          Increase quantity\n        </CartLineQuantityAdjustButton>\n      </CartLineProvider>\n    );\n  });\n}\n")),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-tsx"},"// Run an async action before the default `onClick` behaviour\nimport {\n  CartLineProvider,\n  useCart,\n  CartLineQuantityAdjustButton,\n} from '@shopify/hydrogen';\n\nexport function App() {\n  const {lines} = useCart();\n  const performed = useRef();\n  const buttonRef = useRef();\n\n  const handleCustomOnClick = async (event) => {\n    if (performed.current) {\n      performed.current = false;\n      return;\n    }\n\n    event.preventDefault(); // stop default behaviour\n    console.log(`Performing custom action...`);\n    await new Promise((r) => setTimeout(r, 500));\n    console.log(`Custom action complete!`);\n\n    performed.current = true; // prevents retriggering\n    buttonRef.current.click(); // trigger button default behaviour\n  };\n\n  return lines.map((line) => {\n    return (\n      <CartLineProvider key={line.id} line={line}>\n        <CartLineQuantityAdjustButton\n          adjust=\"increase\"\n          onClick={handleCustomOnClick}\n          buttonRef={buttonRef}\n        >\n          Increase quantity\n        </CartLineQuantityAdjustButton>\n      </CartLineProvider>\n    );\n  });\n}\n")),(0,a.kt)("h2",{id:"props"},"Props"),(0,a.kt)("table",null,(0,a.kt)("thead",{parentName:"table"},(0,a.kt)("tr",{parentName:"thead"},(0,a.kt)("th",{parentName:"tr",align:null},"Name"),(0,a.kt)("th",{parentName:"tr",align:null},"Type"),(0,a.kt)("th",{parentName:"tr",align:null},"Description"))),(0,a.kt)("tbody",{parentName:"table"},(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",{parentName:"tr",align:null},"adjust"),(0,a.kt)("td",{parentName:"tr",align:null},(0,a.kt)("inlineCode",{parentName:"td"},'"increase" &#124; "decrease" &#124; "remove"')),(0,a.kt)("td",{parentName:"tr",align:null},"The adjustment for a cart line's quantity. Valid values: ",(0,a.kt)("inlineCode",{parentName:"td"},"increase")," (default), ",(0,a.kt)("inlineCode",{parentName:"td"},"decrease"),", or ",(0,a.kt)("inlineCode",{parentName:"td"},"remove"),".")),(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",{parentName:"tr",align:null},"children"),(0,a.kt)("td",{parentName:"tr",align:null},(0,a.kt)("inlineCode",{parentName:"td"},"ReactNode")),(0,a.kt)("td",{parentName:"tr",align:null},"Any ",(0,a.kt)("inlineCode",{parentName:"td"},"ReactNode")," elements.")),(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",{parentName:"tr",align:null},"onClick?"),(0,a.kt)("td",{parentName:"tr",align:null},(0,a.kt)("inlineCode",{parentName:"td"},"(event?: React.MouseEvent<<wbr>HTMLButtonElement, MouseEvent<wbr>>) => void &#124; boolean;")),(0,a.kt)("td",{parentName:"tr",align:null},"A click event handler. Default behaviour triggers the click event, unless prevented.")),(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",{parentName:"tr",align:null},"buttonRef?"),(0,a.kt)("td",{parentName:"tr",align:null},(0,a.kt)("inlineCode",{parentName:"td"},"Ref<<wbr>HTMLButtonElement<wbr>> ")),(0,a.kt)("td",{parentName:"tr",align:null},"A reference to the underlying button.")),(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",{parentName:"tr",align:null},"as?"),(0,a.kt)("td",{parentName:"tr",align:null},(0,a.kt)("inlineCode",{parentName:"td"},"React.ElementType")," with ",(0,a.kt)("inlineCode",{parentName:"td"},"button")," as default"),(0,a.kt)("td",{parentName:"tr",align:null},"Provides a React element or component to render as the underlying button. ",(0,a.kt)("br",null),"For accessibility compliance, use either a ",(0,a.kt)("inlineCode",{parentName:"td"},"button")," element or a component that renders an underlying button.")))),(0,a.kt)("h2",{id:"component-type"},"Component type"),(0,a.kt)("p",null,"The ",(0,a.kt)("inlineCode",{parentName:"p"},"CartLineQuantityAdjustButton")," component is a shared component, which means that it renders on both the server and the client. For more information about component types, refer to ",(0,a.kt)("a",{parentName:"p",href:"https://shopify.dev/custom-storefronts/hydrogen/react-server-components"},"React Server Components"),"."),(0,a.kt)("h2",{id:"related-components"},"Related components"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("a",{parentName:"li",href:"/components/cart/cartlineprovider/"},(0,a.kt)("inlineCode",{parentName:"a"},"CartLineProvider")))))}p.isMDXComponent=!0}}]);